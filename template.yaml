AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  poor's man youtube podcasts
Resources:
  YoutubeVideosQueue:
    Type: "AWS::SQS::Queue"
    Properties:
      VisibilityTimeout: 300

  SourcesQueue:
    Type: "AWS::SQS::Queue"
    Properties:
      VisibilityTimeout: 300

  FeedgenNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "Feedgen notifications topic"

  Init:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: init/
      Handler: init.lambda_handler
      Runtime: python3.7
      MemorySize: 128
      Timeout: 300
      Environment:
        Variables:
          S3_BUCKET: "podcasts.awsome.click"
          SQS_QUEUE_URL: !Ref SourcesQueue
      Policies:
        - AWSLambdaExecute # Managed Policy
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
                - sqs:ChangeMessageVisibility
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
                - sqs:ReceiveMessage
                - sqs:SendMessage
              Resource: !GetAtt SourcesQueue.Arn

  Parser:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: youtube_parser/
      Handler: fetch_videos.lambda_handler
      Runtime: python3.7
      MemorySize: 128
      Timeout: 300
      Environment:
        Variables:
          SQS_QUEUE_URL: !Ref YoutubeVideosQueue
          YOUTUBE_API_KEY: "redacted"
          S3_BUCKET: podcasts.awsome.click
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt SourcesQueue.Arn
            BatchSize: 1
      Policies:
        - AWSLambdaExecute # Managed Policy
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
                - sqs:ChangeMessageVisibility
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
                - sqs:ReceiveMessage
                - sqs:SendMessage
              Resource: !GetAtt YoutubeVideosQueue.Arn
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
              Resource: '*'
            - Effect: Allow
              Action:
                - s3:PutObject*
              Resource: 'arn:aws:s3:::podcasts.awsome.click/*'

  AudioUploader:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: audio_uploader/
      Handler: audio_uploader.lambda_handler
      Runtime: python3.7
      MemorySize: 256
      Timeout: 300
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:ffmpeg:1"
      Environment:
        Variables:
          S3_OUTPUT_BUCKET: "podcasts.awsome.click"
          FEEDGEN_SNS_TOPIC: !Ref FeedgenNotificationTopic
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt YoutubeVideosQueue.Arn
            BatchSize: 1
      Policies:
          - AWSLambdaExecute # Managed Policy
          - Version: '2012-10-17' # Policy Document
            Statement:
              - Effect: Allow
                Action:
                  - sqs:ChangeMessageVisibility
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                  - sqs:ReceiveMessage
                Resource: !GetAtt YoutubeVideosQueue.Arn
              - Effect: Allow
                Action:
                  - dynamodb:UpdateItem
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:PutObject*
                Resource: 'arn:aws:s3:::podcasts.awsome.click/*'
              - Effect: Allow
                Action:
                  - sns:List*
                  - sns:Publish
                Resource: '*'

  PodcastsGenerator:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: podcast_feedgen/
      Handler: podcast_feedgen.lambda_handler
      Runtime: python3.7
      MemorySize: 256
      Timeout: 600
      Environment:
        Variables:
          S3_BUCKET: "podcasts.awsome.click"
      Events:
        sns:
          Type: SNS
          Properties:
            Topic: !Ref FeedgenNotificationTopic
      Policies:
          - AWSLambdaExecute # Managed Policy
          - Version: '2012-10-17' # Policy Document
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject*
                Resource: 'arn:aws:s3:::podcasts.awsome.click/*'
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource: 'arn:aws:s3:::podcasts.awsome.click'
